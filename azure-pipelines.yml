# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'run_tests_conda'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
    - script: |
        echo $PATH
        source /usr/share/miniconda/etc/profile.d/conda.sh
      displayName: "Enable conda activate command"

    - script: |
        echo $PATH
        conda create -y -n tmclass python=$(python.version)
        conda env update tmclass -f environment.yml
        conda activate tmclass
      displayName: "Setup conda env"

    - script: |
        python -V
        python -c "import sys; print(sys.executable)"
      displayName: "Check Python"

    - script: |
        pip install janome  # optional dependency for japanese
        pip install -e exercises
        pip install -e solutions
      displayName: "Installation"

    - script: |
        python -m pip install flake8
        flake8 .
      displayName: 'Code and style checks (flake8)'

    - script: |
        python -m tmclass_exercises.data_download
        python -m tmclass_solutions.data_download
      displayName: "Download auxiliary data and models"

    - script: |
        pytest --junitxml=test-results.xml
      displayName: "Pytest"

    - task: PublishTestResults@1
      inputs:
        testResultsFiles: 'test-*.xml'
        testRunTitle: 'Publish test results'

- job: 'run_tests_pip'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: |
        pip install -r requirements.txt
        pip install janome  # optional dependency for japanese
        pip install -e exercises
        pip install -e solutions
      displayName: "Installation"

    - script: |
        python -m pip install flake8
        flake8 .
      displayName: 'Code and style checks (flake8)'

    - script: |
        python -m tmclass_exercises.data_download
        python -m tmclass_solutions.data_download
      displayName: "Download auxiliary data and models"

    - script: |
        pytest --junitxml=test-results.xml
      displayName: "Pytest"

    - task: PublishTestResults@1
      inputs:
        testResultsFiles: 'test-*.xml'
        testRunTitle: 'Publish test results'
